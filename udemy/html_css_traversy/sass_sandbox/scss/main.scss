// Creating new files could required node-sass to be restarted

// In order to turn varibles, fucntion, mixins and etc accessable we need to import the file
@import 'variables';
@import 'function';

* {
    margin: 0;
    padding: 0;
}

body {
    background: $light-color;
    color: $dark-color;
    font-family: $font-stack;
    line-height: 1.5rem;
}

// Inside the header we have one of the most used SASS resources, the nesting
// We can nest elements that belongs to a block just by inputing them and the required configuration
header {
    background: $dark-color;
    // The set-text-color checks the lightness of the backgound color and adapts its text color
    // That is why we set $dark-color as an attribute value to the function, for reference
    color: set-text-color($dark-color);
    padding: 1rem;

    h1 {
        text-align: center;
    }
}

// The &- points to a child element 
// In this case we have two section each one with its own class, section-a and b
// Using &-a allows us to point to section-a class inside section element
.section {
    padding: 3rem;

    h3 {
        font-size: 2rem;
    }

    &-a {
        background: $primary-color;
        color: set-text-color($primary-color);
    }

    &-b {
        background: $secondary-color;
        color: set-text-color($secondary-color);
    }
}

// The same goes for hovering, using &:hover will point to its parent element
a {
    color: $dark-color;

    &:hover {
        color: coral;
    }
}

// We can develop a shared style by using the %
%btn-shared {
    display: inline-block;
    padding: 0.7rem 2rem;
    border: none;
    cursor: pointer;
    text-decoration: none;
    margin-top: 1rem;
}

// We don`t have a class named btn however we have btn-light and dark
// Using &- we target the class we want
// Using @extend we acquire the shared configuration
// Using @include allows us to use mixins
.btn {
    &-light {
        @extend %btn-shared;
        background: $light-color;
        color: set-text-color($light-color);

        &:hover {
            @include transform(rotate(20deg));
            background-color: darken($light-color, 10%);
        }
    }

    &-dark {
        @extend %btn-shared;
        background: $dark-color;
        color: set-text-color($dark-color);

        &:hover {
            @include transform(rotate(-20deg));
            background-color: lighten($dark-color, 10%);
        }
    }
}